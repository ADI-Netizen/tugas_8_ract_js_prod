{"version":3,"sources":["halaman/Navbar.js","halaman/Bread.js","halaman/Slide.js","halaman/Konten.js","App.js","serviceWorker.js","index.js"],"names":["NaviBar","style","backgroundColor","marginTop","Row","Col","DropdownButton","id","title","Dropdown","Item","href","md","Image","src","height","roundedCircle","className","Bread","Breadcrumb","active","Slide","Container","Carousel","alt","Caption","Konten","React","useState","show","setShow","handleClose","ListGroup","as","disabled","Jumbotron","Button","variant","Form","Group","controlId","Control","type","placeholder","Check","label","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","App","Navbar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8af48904.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Dropdown, DropdownButton, Image } from 'react-bootstrap';\r\n\r\nfunction NaviBar() {\r\n    return (\r\n        <div style={{ backgroundColor: 'black', marginTop: '5px' }}>\r\n            <Row>\r\n                <Col>\r\n                    <DropdownButton id=\"dropdown-basic-button\" title=\"Pilih Bahasa\">\r\n                        <Dropdown.Item href=\"#/action-1\">Bahasa Indonesia</Dropdown.Item>\r\n                        <Dropdown.Item href=\"#/action-2\">English</Dropdown.Item>\r\n                        <Dropdown.Item href=\"#/action-3\">日本</Dropdown.Item>\r\n                    </DropdownButton>\r\n                </Col>\r\n                <Col md={8}></Col>\r\n                <Col>\r\n                    <Image src=\"https://png.pngtree.com/svg/20161113/ef1b24279e.png\" height=\"50px\" roundedCircle />\r\n                    <p className=\"text-light\">Alan Saputra</p>\r\n                </Col>\r\n            </Row>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default NaviBar;","import React from 'react';\r\nimport { Breadcrumb, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Bread() {\r\n    return (\r\n        <div>\r\n            <Row className=\"flex-row-reverse mr-1\">\r\n                <Col md={4} >\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item href=\"#\">Berita</Breadcrumb.Item>\r\n                        <Breadcrumb.Item active>Bola</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </Col>\r\n            </Row>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Bread;","import React from 'react';\r\nimport { Container, Carousel } from 'react-bootstrap';\r\n\r\nfunction Slide() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Carousel>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"https://images.performgroup.com/di/library/GOAL/f3/33/england-celebrate-vs-montenegro_e97kv5anpqlq1gr9nc2qaz4ko.jpg?t=-1232521935&quality=60&w=1600\"\r\n                            alt=\"First slide\"\r\n                            height=\"450px\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>Inggris Mau Jadi Tim Terbaik Di Dunia</h3>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"https://images.performgroup.com/di/library/GOAL/30/f0/neymar-psg-paris-saint-germain-2018-19_gmakk5891n9c19udcwofmrsgc.jpg?t=-1258742791&quality=60&w=1600\"\r\n                            alt=\"Second slide\"\r\n                            height=\"450px\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>Neymar,Neymar, Kalo Gede Mau Jadi Apa?</h3>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"https://images.performgroup.com/di/library/GOAL/63/7f/sani-rizki-fauzi-indonesia-u-22_4yztc4nehkt61fa7omuyagf71.jpg?t=351764441&quality=60&w=1600\"\r\n                            alt=\"Third slide\"\r\n                            height=\"450px\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3>Timnas U-23</h3>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slide;","import React from 'react';\r\nimport { Row, Col, Image, ListGroup, Jumbotron, Button, Form, Modal } from 'react-bootstrap';\r\n\r\nfunction Konten() {\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <Row>\r\n                <Col>\r\n                    <ListGroup as=\"ul\">\r\n                        <ListGroup.Item as=\"li\" active>\r\n                            Liga 1 Indonesia\r\n                    </ListGroup.Item>\r\n                        <ListGroup.Item as=\"li\">Liga Primer Inggris</ListGroup.Item>\r\n                        <ListGroup.Item as=\"li\" disabled>\r\n                            Divisi Primera\r\n                    </ListGroup.Item>\r\n                        <ListGroup.Item as=\"li\">Serie A</ListGroup.Item>\r\n                        <ListGroup.Item as=\"li\">Ligue 1</ListGroup.Item>\r\n                        <ListGroup.Item as=\"li\">Bundes Liga</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col>\r\n                    <Jumbotron>\r\n                        <h1>Divisi Primera</h1>\r\n                        <p>\r\n                            Main untuk Catalunya, Gerrard Pique minta dihormati.\r\n                    </p>\r\n                        <p>\r\n                            <Button variant=\"primary\">Read more</Button>\r\n                        </p>\r\n                    </Jumbotron>\r\n                </Col>\r\n                <Col>\r\n                    <center>\r\n                        <Image src=\"https://png.pngtree.com/svg/20161113/ef1b24279e.png\" height=\"50px\" roundedCircle />\r\n                        <h4>Silahkan Login</h4>\r\n                    </center>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Masukkan email\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Term & Condition\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" onClick={handleShow}>\r\n                            Login\r\n                     </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Anda Berhasil Login</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>Save Username & Password</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Konten;","import React from 'react';\nimport './css/bootstrap.min.css'\nimport Navbar from './halaman/Navbar';\nimport Bread from './halaman/Bread';\nimport Slide from './halaman/Slide';\nimport Konten from './halaman/Konten';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Bread />\n      <Slide />\n      <Konten />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}